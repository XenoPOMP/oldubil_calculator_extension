import cn from 'classnames';
import { FC } from 'react';
import { NavLink } from 'react-router-dom';

import InfoPopup from '@components/InfoPopup/InfoPopup';

import Overlay from '@ui/Overlay/Overlay';

import useBoolean from '@hooks/useBoolean';

import styles from './Navigation.module.scss';
import { NavigationProps } from './Navigation.props';

const Navigation: FC<NavigationProps> = ({}) => {
  const [isPopupShown, togglePopupShown, setPopupShown] = useBoolean(false);

  return (
    <>
      <InfoPopup
        isShown={isPopupShown}
        toggleShown={togglePopupShown}
        changeShown={setPopupShown}
      />

      <nav className={cn(styles.appNavigation)}>
        <ul>
          <li>
            <NavLink
              to={'/index.html'}
              className={({ isActive }) => cn(isActive && styles.active)}
            >
              <svg
                viewBox='0 0 24 19'
                fill='none'
                xmlns='http://www.w3.org/2000/svg'
              >
                <path d='M4.25 18.9V10.75H0.199997L12 0.0999985L15.6 3.35V0.699998H19.75V7.1L23.8 10.75H19.75V18.9H12.9V12.3H11.1V18.9H4.25ZM6.9 16.25H8.45V9.65H15.55V16.25H17.1V8.3L12 3.7L6.9 8.29147V16.25ZM9.8 8.125H14.2C14.2 7.54167 13.9804 7.05833 13.5411 6.675C13.1018 6.29167 12.5893 6.1 12.0036 6.1C11.4179 6.1 10.9042 6.29167 10.4625 6.675C10.0208 7.05833 9.8 7.54167 9.8 8.125Z' />
              </svg>
            </NavLink>
          </li>

          <li>
            <NavLink
              to={'/games'}
              className={({ isActive }) =>
                cn(isActive && styles.active, styles.isBlocked)
              }
            >
              <svg
                viewBox='0 0 22 14'
                fill='none'
                xmlns='http://www.w3.org/2000/svg'
              >
                <path
                  d='M2.87501 13.7C2.14626 13.7 1.52241 13.4405 1.00346 12.9216C0.484489 12.4026 0.225006 11.7788 0.225006 11.05V2.9C0.225006 2.17125 0.484489 1.5474 1.00346 1.02845C1.52241 0.509483 2.14626 0.25 2.87501 0.25H19.175C19.9038 0.25 20.5276 0.509483 21.0466 1.02845C21.5655 1.5474 21.825 2.17125 21.825 2.9V11.05C21.825 11.7788 21.5655 12.4026 21.0466 12.9216C20.5276 13.4405 19.9038 13.7 19.175 13.7H2.87501ZM2.87501 11.05H19.175V2.9H2.87501V11.05ZM5.62501 9.725H8.27501V8.3H9.70001V5.65H8.27501V4.225H5.62501V5.65H4.20001V8.3H5.62501V9.725ZM13.35 9.75C13.7667 9.75 14.1208 9.60417 14.4125 9.3125C14.7042 9.02083 14.85 8.66667 14.85 8.25C14.85 7.83333 14.7042 7.47917 14.4125 7.1875C14.1208 6.89583 13.7667 6.75 13.35 6.75C12.9333 6.75 12.5792 6.89583 12.2875 7.1875C11.9958 7.47917 11.85 7.83333 11.85 8.25C11.85 8.66667 11.9958 9.02083 12.2875 9.3125C12.5792 9.60417 12.9333 9.75 13.35 9.75ZM16.35 7.225C16.7667 7.225 17.1208 7.07917 17.4125 6.7875C17.7042 6.49583 17.85 6.14167 17.85 5.725C17.85 5.30833 17.7042 4.95417 17.4125 4.6625C17.1208 4.37083 16.7667 4.225 16.35 4.225C15.9333 4.225 15.5792 4.37083 15.2875 4.6625C14.9958 4.95417 14.85 5.30833 14.85 5.725C14.85 6.14167 14.9958 6.49583 15.2875 6.7875C15.5792 7.07917 15.9333 7.225 16.35 7.225Z'
                  fill='white'
                />
              </svg>
            </NavLink>
          </li>

          <li>
            <NavLink
              to={'/to-currencies'}
              className={({ isActive }) => cn(isActive && styles.active)}
            >
              <svg
                viewBox='0 0 26 26'
                fill='none'
                xmlns='http://www.w3.org/2000/svg'
              >
                <path
                  d='M11.7238 22.5V20.2C10.7404 19.95 9.92795 19.5167 9.28628 18.9C8.64461 18.2833 8.17378 17.3833 7.87378 16.2L10.3238 15.25C10.5738 16.1 10.9363 16.7375 11.4113 17.1625C11.8863 17.5875 12.5238 17.8 13.3238 17.8C13.9738 17.8 14.4946 17.6583 14.8863 17.375C15.2779 17.0917 15.4738 16.6833 15.4738 16.15C15.4738 15.65 15.2821 15.2333 14.8988 14.9C14.5154 14.5667 13.7738 14.2333 12.6738 13.9C11.0571 13.4167 9.95295 12.8042 9.36128 12.0625C8.76961 11.3208 8.47378 10.5 8.47378 9.6C8.47378 8.46667 8.80295 7.58333 9.46128 6.95C10.1196 6.31667 10.8738 5.9 11.7238 5.7V3.5H14.3738V5.7C15.1571 5.83333 15.8654 6.19167 16.4988 6.775C17.1321 7.35833 17.5738 8.05 17.8238 8.85L15.3738 9.9C15.1738 9.36667 14.8988 8.94167 14.5488 8.625C14.1988 8.30833 13.7071 8.15 13.0738 8.15C12.4238 8.15 11.9363 8.29167 11.6113 8.575C11.2863 8.85833 11.1238 9.16667 11.1238 9.5C11.1238 9.98333 11.3196 10.3625 11.7113 10.6375C12.1029 10.9125 13.0071 11.2667 14.4238 11.7C15.6238 12.05 16.5488 12.6125 17.1988 13.3875C17.8488 14.1625 18.1571 15.0667 18.1238 16.1C18.0904 17.4 17.7279 18.375 17.0363 19.025C16.3446 19.675 15.4571 20.1 14.3738 20.3V22.5H11.7238Z'
                  fill='white'
                />
              </svg>
            </NavLink>
          </li>

          <li
            onClick={() => {
              setPopupShown(true);
            }}
          >
            <a>
              <svg
                viewBox='0 0 21 20'
                fill='none'
                xmlns='http://www.w3.org/2000/svg'
                style={{
                  width: '1em'
                }}
              >
                <path d='M10.0762 16C10.4262 16 10.7221 15.8792 10.9637 15.6375C11.2054 15.3958 11.3262 15.1 11.3262 14.75C11.3262 14.4 11.2054 14.1042 10.9637 13.8625C10.7221 13.6208 10.4262 13.5 10.0762 13.5C9.72622 13.5 9.43039 13.6208 9.18872 13.8625C8.94705 14.1042 8.82622 14.4 8.82622 14.75C8.82622 15.1 8.94705 15.3958 9.18872 15.6375C9.43039 15.8792 9.72622 16 10.0762 16ZM9.17622 12.15H11.0262C11.0262 11.6 11.0887 11.1667 11.2137 10.85C11.3387 10.5333 11.6929 10.1 12.2762 9.55C12.7096 9.11667 13.0512 8.70417 13.3012 8.3125C13.5512 7.92083 13.6762 7.45 13.6762 6.9C13.6762 5.96667 13.3346 5.25 12.6512 4.75C11.9679 4.25 11.1596 4 10.2262 4C9.27622 4 8.50539 4.25 7.91372 4.75C7.32205 5.25 6.90955 5.85 6.67622 6.55L8.32622 7.2C8.40955 6.9 8.59705 6.575 8.88872 6.225C9.18039 5.875 9.62622 5.7 10.2262 5.7C10.7596 5.7 11.1596 5.84583 11.4262 6.1375C11.6929 6.42917 11.8262 6.75 11.8262 7.1C11.8262 7.43333 11.7262 7.74583 11.5262 8.0375C11.3262 8.32917 11.0762 8.6 10.7762 8.85C10.0429 9.5 9.59289 9.99167 9.42622 10.325C9.25955 10.6583 9.17622 11.2667 9.17622 12.15ZM10.1262 20C8.74289 20 7.44289 19.7375 6.22622 19.2125C5.00955 18.6875 3.95122 17.975 3.05122 17.075C2.15122 16.175 1.43872 15.1167 0.913721 13.9C0.388721 12.6833 0.126221 11.3833 0.126221 10C0.126221 8.61667 0.388721 7.31667 0.913721 6.1C1.43872 4.88333 2.15122 3.825 3.05122 2.925C3.95122 2.025 5.00955 1.3125 6.22622 0.7875C7.44289 0.2625 8.74289 0 10.1262 0C11.5096 0 12.8096 0.2625 14.0262 0.7875C15.2429 1.3125 16.3012 2.025 17.2012 2.925C18.1012 3.825 18.8137 4.88333 19.3387 6.1C19.8637 7.31667 20.1262 8.61667 20.1262 10C20.1262 11.3833 19.8637 12.6833 19.3387 13.9C18.8137 15.1167 18.1012 16.175 17.2012 17.075C16.3012 17.975 15.2429 18.6875 14.0262 19.2125C12.8096 19.7375 11.5096 20 10.1262 20ZM10.1262 18C12.3596 18 14.2512 17.225 15.8012 15.675C17.3512 14.125 18.1262 12.2333 18.1262 10C18.1262 7.76667 17.3512 5.875 15.8012 4.325C14.2512 2.775 12.3596 2 10.1262 2C7.89289 2 6.00122 2.775 4.45122 4.325C2.90122 5.875 2.12622 7.76667 2.12622 10C2.12622 12.2333 2.90122 14.125 4.45122 15.675C6.00122 17.225 7.89289 18 10.1262 18Z' />
              </svg>
            </a>
          </li>
        </ul>
      </nav>
    </>
  );
};

export default Navigation;
